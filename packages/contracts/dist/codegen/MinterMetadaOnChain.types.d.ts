/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export type Timestamp = Uint64;
export type Uint64 = string;
export type Uint128 = string;
export interface ConfigResponse {
    admin: string;
    cw721_address: string;
    cw721_code_id: number;
    max_num_tokens: number;
    per_address_limit: number;
    start_time: Timestamp;
    unit_price: Coin;
    whitelist?: string | null;
    [k: string]: unknown;
}
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export type Addr = string;
export interface Config {
    admin: Addr;
    cw721_code_id: number;
    max_num_tokens: number;
    per_address_limit: number;
    start_time: Timestamp;
    unit_price: Coin;
    whitelist?: Addr | null;
    [k: string]: unknown;
}
export type ExecuteMsg = {
    upsert_token_metadatas: {
        token_metadatas: TokenMetadata[];
        [k: string]: unknown;
    };
} | {
    mint: {
        [k: string]: unknown;
    };
} | {
    set_admin: {
        admin: string;
        [k: string]: unknown;
    };
} | {
    set_whitelist: {
        whitelist: string;
        [k: string]: unknown;
    };
} | {
    update_start_time: Timestamp;
} | {
    update_per_address_limit: {
        per_address_limit: number;
        [k: string]: unknown;
    };
} | {
    update_unit_price: {
        unit_price: Coin;
        [k: string]: unknown;
    };
} | {
    mint_to: {
        recipient: string;
        [k: string]: unknown;
    };
} | {
    mint_for: {
        recipient: string;
        token_id: number;
        [k: string]: unknown;
    };
} | {
    withdraw: {
        recipient: string;
        [k: string]: unknown;
    };
};
export interface TokenMetadata {
    metadata: Metadata;
    token_id: number;
    [k: string]: unknown;
}
export interface Metadata {
    animation_url?: string | null;
    attributes?: Trait[] | null;
    background_color?: string | null;
    description?: string | null;
    external_url?: string | null;
    image?: string | null;
    image_data?: string | null;
    name?: string | null;
    youtube_url?: string | null;
    [k: string]: unknown;
}
export interface Trait {
    display_type?: string | null;
    trait_type: string;
    value: string;
    [k: string]: unknown;
}
export type Decimal = string;
export interface InstantiateMsg {
    cw721_address?: string | null;
    cw721_code_id: number;
    cw721_instantiate_msg?: InstantiateMsg1 | null;
    max_num_tokens: number;
    per_address_limit: number;
    start_time: Timestamp;
    unit_price: Coin;
    whitelist?: string | null;
    [k: string]: unknown;
}
export interface InstantiateMsg1 {
    collection_info: CollectionInfoForRoyaltyInfoResponse;
    minter: string;
    name: string;
    symbol: string;
    [k: string]: unknown;
}
export interface CollectionInfoForRoyaltyInfoResponse {
    creator: string;
    description: string;
    external_link?: string | null;
    image: string;
    royalty_info?: RoyaltyInfoResponse | null;
    [k: string]: unknown;
}
export interface RoyaltyInfoResponse {
    payment_address: string;
    share: Decimal;
    [k: string]: unknown;
}
export type QueryMsg = {
    config: {
        [k: string]: unknown;
    };
} | {
    num_minted: {
        [k: string]: unknown;
    };
} | {
    num_remaining: {
        [k: string]: unknown;
    };
} | {
    start_time: {
        [k: string]: unknown;
    };
} | {
    mint_price: {
        [k: string]: unknown;
    };
} | {
    mint_count: {
        address: string;
        [k: string]: unknown;
    };
} | {
    token_mint: {
        token_id: number;
        [k: string]: unknown;
    };
} | {
    token_mints: {
        descending?: boolean | null;
        filter_minted?: boolean | null;
        limit?: number | null;
        start_after?: number | null;
        [k: string]: unknown;
    };
};
