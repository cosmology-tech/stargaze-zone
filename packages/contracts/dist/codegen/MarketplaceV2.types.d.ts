/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export interface AskCountResponse {
    count: number;
    [k: string]: unknown;
}
export type Timestamp = Uint64;
export type Uint64 = string;
export type Addr = string;
export type Uint128 = string;
export interface AskResponse {
    ask?: Ask | null;
    [k: string]: unknown;
}
export interface Ask {
    expires_at: Timestamp;
    funds_recipient?: Addr | null;
    price: Coin;
    reserve_for?: Addr | null;
    seller: Addr;
    token_id: string;
    [k: string]: unknown;
}
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export interface AsksResponse {
    asks: Ask[];
    [k: string]: unknown;
}
export interface BidResponse {
    bid?: Bid | null;
    [k: string]: unknown;
}
export interface Bid {
    bidder: Addr;
    expires_at: Timestamp;
    price: Coin;
    token_id: string;
    [k: string]: unknown;
}
export interface BidsResponse {
    bids: Bid[];
    [k: string]: unknown;
}
export interface CollectionBidExpiryOffset {
    bidder: Addr;
    expires_at: Timestamp;
    [k: string]: unknown;
}
export interface CollectionBidPriceOffset {
    bidder: Addr;
    price: number;
    [k: string]: unknown;
}
export interface CollectionBidResponse {
    collection_bid?: CollectionBid | null;
    [k: string]: unknown;
}
export interface CollectionBid {
    bidder: Addr;
    expires_at: Timestamp;
    price: Coin;
    units: number;
    [k: string]: unknown;
}
export interface CollectionBidsResponse {
    collection_bids: CollectionBid[];
    [k: string]: unknown;
}
export type Decimal = string;
export interface ConfigResponse {
    config: Config;
    [k: string]: unknown;
}
export interface Config {
    ask_expiry: ExpiryRange;
    bid_expiry: ExpiryRange;
    collector_address: Addr;
    cw721_address: Addr;
    denom: string;
    min_price: Uint128;
    operators: Addr[];
    trading_fee_percent: Decimal;
    [k: string]: unknown;
}
export interface ExpiryRange {
    max: number;
    min: number;
    [k: string]: unknown;
}
export type ExecuteMsg = {
    update_config: {
        ask_expiry?: ExpiryRange | null;
        bid_expiry?: ExpiryRange | null;
        min_price?: Uint128 | null;
        operators?: string[] | null;
        trading_fee_bps?: number | null;
        [k: string]: unknown;
    };
} | {
    set_ask: {
        expires_at: Timestamp;
        funds_recipient?: string | null;
        price: Coin;
        reserve_for?: string | null;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    remove_ask: {
        token_id: string;
        [k: string]: unknown;
    };
} | {
    set_bid: {
        expires_at: Timestamp;
        price: Coin;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    remove_bid: {
        token_id: string;
        [k: string]: unknown;
    };
} | {
    accept_bid: {
        bidder: string;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    set_collection_bid: {
        expires_at: Timestamp;
        price: Coin;
        units: number;
        [k: string]: unknown;
    };
} | {
    remove_collection_bid: {
        [k: string]: unknown;
    };
} | {
    accept_collection_bid: {
        bidder: string;
        token_id: string;
        [k: string]: unknown;
    };
};
export interface InstantiateMsg {
    ask_expiry: ExpiryRange;
    auction_max_duration: number;
    auction_min_duration: number;
    bid_expiry: ExpiryRange;
    collector_address: string;
    cw721_address: string;
    denom: string;
    min_price: Uint128;
    operators: string[];
    trading_fee_bps: number;
    [k: string]: unknown;
}
export type MarketplaceContract = Addr;
export type QueryMsg = {
    config: {
        [k: string]: unknown;
    };
} | {
    ask: {
        token_id: string;
        [k: string]: unknown;
    };
} | {
    asks_sorted_by_expiry: {
        query_options: QueryOptionsForTokenTimestampOffset;
        [k: string]: unknown;
    };
} | {
    asks_sorted_by_price: {
        query_options: QueryOptionsForTokenPriceOffset;
        [k: string]: unknown;
    };
} | {
    asks_by_seller_expiry: {
        query_options: QueryOptionsForTokenTimestampOffset;
        seller: string;
        [k: string]: unknown;
    };
} | {
    ask_count: {
        [k: string]: unknown;
    };
} | {
    bid: {
        bidder: string;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    bids_sorted_by_expiry: {
        query_options: QueryOptionsForBidExpiryOffset;
        [k: string]: unknown;
    };
} | {
    bids_by_token_price: {
        query_options: QueryOptionsForBidTokenPriceOffset;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    bids_by_bidder_expiry: {
        bidder: string;
        query_options: QueryOptionsForBidExpiryOffset;
        [k: string]: unknown;
    };
} | {
    collection_bid: {
        bidder: string;
        [k: string]: unknown;
    };
} | {
    collection_bids_by_price: {
        query_options: QueryOptionsForCollectionBidPriceOffset;
        [k: string]: unknown;
    };
} | {
    collection_bids_by_expiry: {
        query_options: QueryOptionsForCollectionBidExpiryOffset;
        [k: string]: unknown;
    };
};
export interface QueryOptionsForTokenTimestampOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: TokenTimestampOffset | null;
    [k: string]: unknown;
}
export interface TokenTimestampOffset {
    timestamp: Timestamp;
    token_id: string;
    [k: string]: unknown;
}
export interface QueryOptionsForTokenPriceOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: TokenPriceOffset | null;
    [k: string]: unknown;
}
export interface TokenPriceOffset {
    price: Uint128;
    token_id: string;
    [k: string]: unknown;
}
export interface QueryOptionsForBidExpiryOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: BidExpiryOffset | null;
    [k: string]: unknown;
}
export interface BidExpiryOffset {
    bidder: Addr;
    expires_at: Timestamp;
    token_id: string;
    [k: string]: unknown;
}
export interface QueryOptionsForBidTokenPriceOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: BidTokenPriceOffset | null;
    [k: string]: unknown;
}
export interface BidTokenPriceOffset {
    bidder: Addr;
    price: number;
    token_id: string;
    [k: string]: unknown;
}
export interface QueryOptionsForCollectionBidPriceOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: CollectionBidPriceOffset | null;
    [k: string]: unknown;
}
export interface QueryOptionsForCollectionBidExpiryOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: CollectionBidExpiryOffset | null;
    [k: string]: unknown;
}
