/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { MsgExecuteContractEncodeObject } from "@cosmjs/cosmwasm-stargate";
import { Member, Coin } from "./RoyaltyGroup.types";
export interface RoyaltyGroupMsg {
    contractAddress: string;
    sender: string;
    updateAdmin: ({ admin }: {
        admin?: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    updateMembers: ({ add, remove }: {
        add: Member[];
        remove: string[];
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addHook: ({ addr }: {
        addr: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeHook: ({ addr }: {
        addr: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    distribute: ({ funds }: {
        funds: Coin;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class RoyaltyGroupMsgComposer implements RoyaltyGroupMsg {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    updateAdmin: ({ admin }: {
        admin?: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    updateMembers: ({ add, remove }: {
        add: Member[];
        remove: string[];
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addHook: ({ addr }: {
        addr: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeHook: ({ addr }: {
        addr: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    distribute: ({ funds }: {
        funds: Coin;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
