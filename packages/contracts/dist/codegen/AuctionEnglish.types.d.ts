/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export type Timestamp = Uint64;
export type Uint64 = string;
export type Addr = string;
export type Uint128 = string;
export type AuctionStatus = "Pending" | "Open" | "Closed" | "Expired";
export interface AuctionResponse {
    auction?: Auction | null;
    auction_status?: AuctionStatus | null;
    is_reserve_price_met?: boolean | null;
    next_bid_min?: Uint128 | null;
    [k: string]: unknown;
}
export interface Auction {
    end_time: Timestamp;
    funds_recipient?: Addr | null;
    highest_bid?: AuctionBid | null;
    reserve_price?: Coin | null;
    seller: Addr;
    start_time: Timestamp;
    starting_price: Coin;
    token_id: string;
    [k: string]: unknown;
}
export interface AuctionBid {
    bidder: Addr;
    price: Coin;
    [k: string]: unknown;
}
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export interface AuctionsResponse {
    auctions: Auction[];
    [k: string]: unknown;
}
export type Decimal = string;
export interface ConfigResponse {
    config: Config;
    [k: string]: unknown;
}
export interface Config {
    buffer_duration: number;
    closed_duration: number;
    collector_address: Addr;
    cw721_address: Addr;
    denom: string;
    max_duration: number;
    min_bid_increment: Uint128;
    min_duration: number;
    min_price: Uint128;
    operators: Addr[];
    trading_fee_percent: Decimal;
    [k: string]: unknown;
}
export type ExecuteMsg = {
    update_config: {
        buffer_duration?: number | null;
        closed_duration?: number | null;
        collector_address?: string | null;
        max_duration?: number | null;
        min_bid_increment?: Uint128 | null;
        min_duration?: number | null;
        min_price?: Uint128 | null;
        operators?: string[] | null;
        trading_fee_bps?: number | null;
        [k: string]: unknown;
    };
} | {
    set_auction: {
        end_time: Timestamp;
        funds_recipient?: string | null;
        reserve_price?: Coin | null;
        start_time: Timestamp;
        starting_price: Coin;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    set_auction_bid: {
        price: Coin;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    close_auction: {
        accept_highest_bid: boolean;
        token_id: string;
        [k: string]: unknown;
    };
} | {
    finalize_auction: {
        token_id: string;
        [k: string]: unknown;
    };
} | {
    void_auction: {
        token_id: string;
        [k: string]: unknown;
    };
};
export interface InstantiateMsg {
    buffer_duration: number;
    closed_duration: number;
    collector_address: string;
    cw721_address: string;
    denom: string;
    max_duration: number;
    min_bid_increment: Uint128;
    min_duration: number;
    min_price: Uint128;
    operators: string[];
    trading_fee_bps: number;
    [k: string]: unknown;
}
export type QueryMsg = {
    config: {
        [k: string]: unknown;
    };
} | {
    auction: {
        token_id: string;
        [k: string]: unknown;
    };
} | {
    auctions_by_start_time: {
        query_options: QueryOptionsForTokenTimestampOffset;
        [k: string]: unknown;
    };
} | {
    auctions_by_end_time: {
        query_options: QueryOptionsForTokenTimestampOffset;
        [k: string]: unknown;
    };
} | {
    auctions_by_highest_bid_price: {
        query_options: QueryOptionsForTokenPriceOffset;
        [k: string]: unknown;
    };
} | {
    auctions_by_seller_end_time: {
        query_options: QueryOptionsForTokenTimestampOffset;
        seller: string;
        [k: string]: unknown;
    };
} | {
    auctions_by_bidder_end_time: {
        bidder: string;
        query_options: QueryOptionsForTokenTimestampOffset;
        [k: string]: unknown;
    };
};
export interface QueryOptionsForTokenTimestampOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: TokenTimestampOffset | null;
    [k: string]: unknown;
}
export interface TokenTimestampOffset {
    timestamp: Timestamp;
    token_id: string;
    [k: string]: unknown;
}
export interface QueryOptionsForTokenPriceOffset {
    descending?: boolean | null;
    filter_expiry?: Timestamp | null;
    limit?: number | null;
    start_after?: TokenPriceOffset | null;
    [k: string]: unknown;
}
export interface TokenPriceOffset {
    price: Uint128;
    token_id: string;
    [k: string]: unknown;
}
